(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{355:function(e,t,n){"use strict";n.r(t);var a=n(25),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('function targetTypeMap(rawType) {\n    switch (rawType) {\n        case "Object":\n        case "Array":\n        return 1 /* COMMON */;\n        case "Map":\n        case "Set":\n        case "WeakMap":\n        case "WeakSet":\n        return 2 /* COLLECTION */;\n        default:\n        return 0 /* INVALID */;\n    }\n}\n\n关键词：\ncreateReactiveObject\ncreateRef、RefImpl\nnew Dep()\n')])])]),t("p",[t("code",[e._v("data init")]),e._v(" 是在生命周期 "),t("code",[e._v("created")]),e._v(" 之前的操作，会对 "),t("code",[e._v("data")]),e._v(" 绑定一个观察者 "),t("code",[e._v("Observer")]),e._v("，之后 "),t("code",[e._v("data")]),e._v(" 中的字段更新都会通知依赖收集器"),t("code",[e._v("Dep")]),e._v("触发视图更新")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Object.definedProperty")]),e._v(" 是劫持对象的属性，新增元素需要再次 "),t("code",[e._v("definedProperty")]),e._v("。而 "),t("code",[e._v("Proxy")]),e._v(" 劫持的是整个对象，不需要做特殊处理")])]),e._v(" "),t("p",[e._v("自己的理解：\n使用defineProperty，就可以在对象被读取或修改的时候，做一些事情。如通知视图更新等。（重写对象属性的修改和读取）\ndefineProperty是对对象的现有单个属性的改装，Proxy是通过创建一个代理对象，这个代理对象拥有原有对象的所有功能，还拥有一些独特改装。\nProxy不兼容IE,")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const data = {name: '罗霜',age: 18};\nconst proxy = new Proxy(data, {\n    set(val){\n    },\n    get(){\n    }\n})\n\n说明Vue传入的data选项，其实是交给了一个代理对象，这个代理对象不仅拥有data的所有，甚至能做更多事情。\n")])])]),t("p",[e._v("defineProperty不适合对数组的每一项进行监听，数组中的成员有很多（10000w条数据），就会浪费性能。")]),e._v(" "),t("p",[e._v("dep是类吧\ntarget,\ndepend();//收集依赖\nnotify();//通知视图更新")]),e._v(" "),t("p",[e._v("校验器：\n条件，结果（true/false）， 后续处理不放在这里")]),e._v(" "),t("ul",[t("li",[e._v("共同点：集合、字典都可以存储不重复的值")]),e._v(" "),t("li",[e._v("不同点：集合是以[值，值]的形式存储元素，字典是以[键，值]的形式存储")])]),e._v(" "),t("blockquote",[t("p",[e._v("集合，是由一堆无序的、相关联的，且不重复的内存结构【数学中称为元素】组成的组合")])]),e._v(" "),t("p",[e._v("-字典（dictionary）是一些元素的集合。每个元素有一个称作key 的域，不同元素的key 各不相同")]),e._v(" "),t("p",[e._v("createApp 返回的是一个应用实例\ndefineComponent像一个渲染函数\nh 返回一个虚拟节点\n虚拟节点vNode, vNode本质是一个对象。")]),e._v(" "),t("p",[e._v("$nextTick是一个异步任务。\n"),t("code",[e._v("vue")]),e._v(" 中我们改变数据时不会立即触发视图，如果需要实时获取到最新的"),t("code",[e._v("DOM")]),e._v("，这个时候可以手动调用 "),t("code",[e._v("nextTick")])]),e._v(" "),t("ul",[t("li",[e._v("编译时，就是将 xxx.vue 进行解析，解析生成对应 js 可运行代码")]),e._v(" "),t("li",[e._v("运行时，就是将编译时生成的代码进一步处理，关于生命周期的声明、watch")])]),e._v(" "),t("p",[e._v("对外统一口径，设计一致化的API\n策略模式处理多场景")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("function elementIsVisibleInViewport(el) {\n    const { top, left, bottom, right } = el.getBoundingClientRect();\n    const { innerHeight, innerWidth } = window;\n    return (top > 0 && top < innerHeight || bottom > 0 && bottom < innerHeight) && (left > 0 && left < innerWidth || right > 0 && right < innerWidth);\n}\n")])])]),t("p",[e._v("ref: 如果是对象，包了reactive，再放入_value,\ntoRef 单个，处理reactive不失去响应式\ntoRefs，多个，处理reactive不失去响应式")])])}),[],!1,null,null,null);t.default=r.exports}}]);